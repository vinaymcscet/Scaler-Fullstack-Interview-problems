Ques-1 --> (Prefix Sum Formula)

    - The prefix sum formula for an array A of N integers is given by:

# Solution - prefSum[i] = prefSum[i - 1] + A[i]

Ques-2 --> Time Complexity of Prefix Sum

What is the time complexity of creating the prefix sum array of an array A of N integers ?

# Solution - O(N)

Ques-3 --> (Range Sum Query)

# Problem Description - 
    You are given an integer array A of length N.
    You are also given a 2D integer array B with dimensions M x 2, where each row denotes a [L, R] query.
    For each query, you have to find the sum of all elements from L to R indices in A (0 - indexed).
    More formally, find A[L] + A[L + 1] + A[L + 2] +... + A[R - 1] + A[R] for each query.

# Problem Constraints - 
    1 <= N, M <= 105
    1 <= A[i] <= 109
    0 <= L <= R < N

# Solution - 
    module.exports = { 
    //param A : array of integers
    //param B : array of array of integers
    //return a array of long integers
        rangeSum : function(A, B){
        let prefixArray = [];
        prefixArray[0] = A[0];
        let resultArr = [];
        for(let i=1;i<A.length;i++) {
            prefixArray[i] = prefixArray[i-1] + A[i];
        }

        for(let j=0;j<B.length;j++) {
            let sum = 0;
            let L = B[j][0];
            let R = B[j][1];

            if(L==0) {
                sum = prefixArray[R];
            } else {
                sum = prefixArray[R] - prefixArray[L-1];
            }
            resultArr.push(sum);
        }
        return resultArr;
        }
    };

Ques-4 --> (Special Index)

# Problem Description
    Given an array, arr[] of size N, the task is to find the count of array indices such that removing an element from these indices makes the sum of even-indexed and odd-indexed array elements equal.

# Problem Constraints
    1 <= N <= 105
    -105 <= A[i] <= 105
    Sum of all elements of A <= 109

# Solution -
    module.exports = { 
    //param A : array of integers
    //return an integer
        solve : function(A){
        let prefOdd = [0];
        let prefEven = [A[0]];
        let count = 0;
        
        for(let i=1;i<A.length;i++) {
            if(i%2==0) {
                prefEven[i] = A[i] + prefEven[i-1];
                prefOdd[i] = prefOdd[i-1];
            } else {
                prefEven[i] = prefEven[i-1];
                prefOdd[i] = prefOdd[i-1] + A[i];
            }
        }
        for(let i=0;i<A.length;i++) {
            let even_sum = 0;
            let odd_sum = 0;
            if(i==0) {
                even_sum = prefEven[A.length-1] - prefEven[i];
                odd_sum = prefOdd[A.length-1] - prefOdd[i]
            } else {
                even_sum = prefEven[i-1] + prefOdd[A.length-1] - prefOdd[i];
                odd_sum = prefOdd[i-1] + prefEven[A.length-1] - prefEven[i];
            }
            if(even_sum == odd_sum) {
                count++;
            }
        }
        return count;
        }
    };

Ques-5 --> (Prefix Sum - I)
    Given the prefix sum of an array, prefSum = [-2, 4, 1, 5, 2]
    What is the sum of the original array from index 0 to 2 (0-based) ?

# Solution - 1

Ques-6 --> (Prefix Sum - II)
    Given the prefix sum of an array, prefSum = [-2, 4, 1, 5, 2]    
    What is the sum of the original array from index 2 to 4 (0-based) ?

# Solution - (-2)

Ques-7 --> (Prefix Sum - III)
    Given the prefix sum of an array, prefSum = [-2, 4, 1, 5, 2]    
    What is the sum of the original array from index 1 to 2 (0-based) ?

# Solution - 3

Ques-8 --> (Equilibrium index of an array)

# Problem Description - 
    You are given an array A of integers of size N.
    Your task is to find the equilibrium index of the given array
    The equilibrium index of an array is an index such that the sum of elements at lower indexes is equal to the sum of elements at higher indexes.
    If there are no elements that are at lower indexes or at higher indexes, then the corresponding sum of elements is considered as 0.
# Note:
    Array indexing starts from 0.
    If there is no equilibrium index then return -1.
    If there are more than one equilibrium indexes then return the minimum index.

# Problem Constraints - 
    1 <= N <= 105
    -105 <= A[i] <= 105

# Solution - 
    module.exports = { 
    //param A : array of integers
    //return an integer
        solve : function(A){
            let left_sum=0;
            let right_sum=0;
            for(let i=0;i<A.length;i++) {
                right_sum +=A[i];
            }
            for(let i=0;i<A.length;i++) {
                right_sum -= A[i];
                if(left_sum == right_sum) {
                    return i;
                } else {
                    left_sum += A[i];
                }
            }
            return -1;
        }
    };

Ques-9 --> ( In-place Prefix Sum)

# Problem Description
    Given an array A of N integers. Construct prefix sum of the array in the given array itself.

# Problem Constraints
    1 <= N <= 105
    1 <= A[i] <= 103

# Solution - 
    module.exports = { 
    //param A : array of integers
    //return a array of integers
        solve : function(A){
            let pref_sum = [];
            pref_sum[0] = A[0]
            for(let i=1;i<A.length;i++) {
                pref_sum[i] = pref_sum[i-1] + A[i];
            }
            return pref_sum;
        }
    };
