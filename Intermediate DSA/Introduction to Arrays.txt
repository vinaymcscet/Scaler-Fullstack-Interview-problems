Ques-1 -->

# Problem Description
    Given an array A and an integer B. A pair(i, j) in the array is a good pair if i != j and (A[i] + A[j] == B). Check if any good pair exist or not.

# Problem Constraints
    1 <= A.size() <= 104
    1 <= A[i] <= 109
    1 <= B <= 109

# Solution - 
    module.exports = { 
    //param A : array of integers
    //param B : integer
    //return an integer
        solve : function(A, B){
            for(let i=0;i<A.length;i++) {
                for(j=i+1;j<A.length;j++) {
                    if(A[i] + A[j] === B) {
                        return 1;
                    } 
                }
            }
            return 0;
        }
    };

Ques-2 -->

# Problem Description
    Given an array A of N integers and also given two integers B and C. Reverse the elements of the array A within the given inclusive range [B, C].

# Problem Constraints
    1 <= N <= 105
    1 <= A[i] <= 109
    0 <= B <= C <= N - 1

# Solution - 
    module.exports = { 
    //param A : array of integers
    //param B : integer
    //param C : integer
    //return a array of integers
        solve : function(A, B, C){
            let i = B, j = C;
            while(i<j){
                let temp = A[i];
                A[i] = A[j];
                A[j] = temp;
                i++;
                j--;
            }
            return A;
        }
    };

Ques-3 --> (Array Rotation)

# Problem Description
    Given an integer array A of size N and an integer B, you have to return the same array after rotating it B times towards the right.

# Problem Constraints
    1 <= N <= 105
    1 <= A[i] <=109
    1 <= B <= 109

# Solution - 
    module.exports = { 
    //param A : array of integers
    //param B : integer
    //return a array of integers
        solve : function(A, B){
            //First Approach
            const N = A.length;
            B = B % N;
            const rotatedArray = A.slice(N - B).concat(A.slice(0, N - B));
            return rotatedArray;

            // second Approach
            let L = A.length;
            if(B>=L) {
                B=B%L;
            }
            let reverse_res = reverseArr(A, 0, L-1);
            let reverse_first = reverseArr(reverse_res, 0, B-1);
            let res = reverseArr(reverse_first, B, L-1);
            return res;

            
            function reverseArr(arr, start, end) {
                let i=start, j=end;
                while(i<j) {
                    let temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                    i++;
                    j--;
                }
                return arr;
            }
            let L = A.length;
            let K=B%L;
            for(let i=0;i<K;i++) {
                let temp = A[L-1];
                for(let j=L-1;j>=1;j--) {
                    A[j] = A[j-1];
                }
                A[0] = temp;
            }
            return A;
        }
    }

Ques-4 --> (Time Complexity - Arrays)

    What is the time complexity for inserting/deleting at the beginning of the array?
# Solution -  O(N)

Ques-5 --> (Max Min of an Array)

# Problem Description
    Given an array A of size N. You need to find the sum of Maximum and Minimum element in the given array.

# Problem Constraints
    1 <= N <= 105
    -109 <= A[i] <= 109

# Solution - 
    module.exports = { 
    //param A : array of integers
    //return an integer
        solve : function(A){
            // Approach - 1
            let max = -Infinity;
            let min = Infinity;
            for(let i=0;i<A.length;i++) {
                max = Math.max(max, Number(A[i]));
                min = Math.min(min, Number(A[i]))
            }
            return max+min;

            // Approach - 2
            A.sort((a,b) => Number(a) - Number(b));
            let output = Number(A[A.length -1]) + Number(A[0]);
            return output;
        }
    };

Ques-6 --> \(Linear Search - Multiple Occurences)

# Problem Description
    Given an array A and an integer B, find the number of occurrences of B in A.

Problem Constraints# 
    1 <= B, Ai <= 109
    1 <= length(A) <= 105

# Solution - 
    module.exports = { 
    //param A : array of integers
    //param B : integer
    //return an integer
        solve : function(A, B){
            let count = 0;
            for(let i=0;i<A.length;i++) {
                if(A[i] == B) {
                    count++;
                }
            }
            return count;
        }
    };

Ques-7 --> (Second Largest)

# Problem Description
    You are given an integer array A. You have to find the second largest element/value in the array or report that no such element exists.

# Problem Constraints
    1 <= |A| <= 105
    0 <= A[i] <= 109

# Solution - 
    module.exports = { 
    //param A : array of integers
    //return an integer
        solve : function(A){

            // Approach - 1
            let max = -Infinity, secondMax = -Infinity;
            for(let i=0;i<A.length;i++) {
                if(A[i] > max) {
                    secondMax = max;
                    max = A[i];
                } else if(A[i] < max && A[i] > secondMax) {
                    secondMax = A[i];
                }
            }
            return parseInt(secondMax);

            // Approach - 2
            let secondmax = -1;
            let index = 0;
            for(let i=0;i<A.length;i++)  {
                if(A[i] > A[index]) {
                    //max = A[i];
                    index = i;
                }
            }
            for(let j=0;j<A.length;j++)  {
                if(A[j] != A[index]) {
                    secondmax = Math.max(secondmax ,A[j]);
                } 
            }
            return secondmax;
        }
    }

Ques-8 --> (Time to equality)

# Problem Description
    Given an integer array A of size N. In one second, you can increase the value of one element by 1.
    Find the minimum time in seconds to make all elements of the array equal.

# Problem Constraints
    1 <= N <= 1000000
    1 <= A[i] <= 1000

# Solution - 
    module.exports = { 
    //param A : array of integers
    //return an integer
        solve : function(A){
            let max=A[0];
            for(let i=0;i<A.length;i++) {
                if(A[i] > max) {
                    max = A[i];
                }
            }
            let count = 0;
            for(let i=0;i<A.length;i++) {
                count+=max-A[i];
            }
            return count;
        }
    };

Ques-9 --> (Problems on 1D Arrays-2 MCQ D)

# Raw Problem
    What will be the output of the following code?
    class Main {
        static void fun(int[]arr) {
            arr[3] = 98;
            return;
        }

        public static void main(String args[]) {
            int[]arr = {10,20,30,40,50};
            fun(arr);
            System.out.println(arr[3]);
        }
    }

# Solution - 98

Ques-10 --> (Count of elements)

# Problem Description
    Given an array A of N integers. 
    Count the number of elements that have at least 1 elements greater than itself.

# Problem Constraints
    1 <= N <= 105
    1 <= A[i] <= 109

# Solution - 
    module.exports = { 
    //param A : array of integers
    //return an integer
        solve : function(A){
            let count = 0, max = 0;
            for(let i=0;i<A.length;i++){
                if(A[i] > max) {
                    max = A[i];
                    count = 1;
                } else if (A[i] == max) {
                    count += 1;
                }
            }
            return A.length - count;

        }
    };
