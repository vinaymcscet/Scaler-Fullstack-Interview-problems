Ques-1 -> (Custom Greeting Component)

    Your task is to create a React component named Greeting with the following requirements:

    The component should take two props, age and occupation.
    Inside the component, use the provided template to display a greeting message. The message should include the name that shpuld be equal to Jasbir with age prop, and the provided occupation prop passed
    Output should be
    <h1>Hello {name} Thanks Babel :) is {age} old and works as {occupation} </h1>
    Note : these questions will do string matching and to avoid confusion please write the exact text

# Solution - 
    App.js - 
        import Greeting from "./Greeting";
        import "./App.css";

        function App() {
        return (
            <div className="App">
            {/* write the code here to pass the required props to the Greeting component , do not edit any other code */}
            <Greeting age={age} occupation={occupation} />
            </div>
        );
        }
        export default App;
    =================
    Greeting.js - 
        function Greeting(obj) {
        // write the logic here to receive the props
        let {age, occupation} = obj;
        let name = "Jasbir"

        return <h1>Hello {name} Thanks Babel :) is {age} old and works as {occupation} </h1>;
        }

        export default Greeting;

Ques-2 -> (Conditional Rendering)

    Note : these questions will do string matching and to avoid confusion please write the exact text

    You are given Packing List component
    Your Task is to create -> Item component that
    accepts two props name and isPacked.
    It should render -> name and if ispacked is true then print : "'✔'" and ❌ if false

# Solution - 
    App.js - 
        import './App.css';
        import Item from './Item';
        import PackingList from './PackingList';

        function App() {
        return (
            <div className="App">
            <PackingList />
            <Item name={name} isPacked={isPacked} />
            </div>
        );
        }

        export default App;
    =====================================
    Item.js - 
        export default function Item({ name, isPacked }) {
        return (
            <li className="item">
            {name}
            { isPacked ? '✔' : '❌'}
            </li>
        );
        }

Ques-3 -> (Git Commit Strategy)

    In a collaborative project using Git, what strategy helps maintain a clean and navigable commit history, especially when incorporating changes from multiple contributors?

# Solution - 
    Adopt a rebase workflow, rebasing feature branches onto the `main` branch before merging to ensure a linear commit history

Ques-4 -> (Rendering List of Items in React)

    You are provided with a React code snippet that aims to render a list of stationary items. Your task is to complete the code by implementing the component responsible for rendering the list of stationary items. Instructions:

    1.Write a React component named ItemList that renders a list of stationary items provided in the stationary array.
    2.Ensure that each item in the list is enclosed within an
    element and has a unique key attribute assigned.
    3.Use the map function to iterate over the stationary array and generate the list items dynamically.

# Solution - 
    App.js - 
        import './App.css';
        import List from './List';

        function App() {
        return (
            <div className="App">
            <List />
            </div>
        );
        }

        export default App;
    =================================
    ItemList.js - 
        export default function ItemList({list}) {
        // Implement the ItemList component to render the list of stationary items here
        return (
            <>
                <ul>
                    {list.map((item, index) => (
                        <li key={index}>
                            {item}
                        </li>
                    ))}
                </ul>
            </>
        );
    }
    ========================
    List.js - 
        import React from 'react';
        import ItemList from './ItemList';
        export default function List() {
            let stationary = ["Pen", "Pencil", "Eraser", "Ruler"];
            let list2=["Hello" ,"Hi", "bi"]
            return (
                <div>
                    <h2>List Items</h2>
                    {/* Render the ItemList component here */}
                    <ItemList list={stationary}/>
                    <ItemList list={list2}/>
                </div>
            );
        }


Ques-5 -> (Key Props in React)

    You are provided with a React code snippet that aims to render a list of stationary items. Your task is to complete the code by implementing the component responsible for rendering the list of stationary items. Instructions:

    Write a React component named ItemList that renders a list of stationary items provided in the stationary array.
    Ensure that each item in the list is enclosed within an
    element and has a unique key attribute assigned.
    Use the map function to iterate over the stationary array and generate the list items dynamically.

# Solution - 
    App.js - 
        import "./App.css";
        import List from "./List";

        function App() {
        return (
            <div className="App">
            <List />
            </div>
        );
        }

        export default App;
    ====================================
    ItemList.js - 
        function ItemList({ list }) {
        // Implement the ItemList component to render the list of stationary items here
        return (
            <>
            <ul>
                {list.map((item, index) => (
                    <li key={index+1}>
                        {item.name}
                    </li>
                ))}
            </ul>
            </>
        );
        }

        export default ItemList;
    ============================================
    List.js - 
        import ItemList from "./ItemList";

        export default function List() {
        let stationary = [
            { id: "1", name: "Pen" },
            { id: 2, name: "Pencil" },
            { id: 3, name: "Eraser" },
            { id: 4, name: "Ruler" },
        ];

        let list2 = [
            { id: 1, name: "Hello" },
            { id: 2, name: "Hi" },
            { id: 3, name: "bi" },
        ];

        return (
            <div>
            <h2>List Items</h2>
            <ItemList list={stationary} />
            <ItemList list={list2} />
            </div>
        );
        }

