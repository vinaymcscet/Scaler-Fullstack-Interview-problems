Ques-1 -> (Kanban Q1: Designing Tickets (HTML/CSS))

    Raw Problem
    Your task is to write CSS for the ticket.

    You have been given HTML boilerplate code and you have to apply the below CSS rules:

    .main-cont should have:
    1. display of flex
    2. gap property set to 2rem
    3. padding of 2rem
    4. main-axis items are centered

    .ticket-cont should have:
    1. height of 12rem
    2. width set to 15rem
    3. background color set to 'coral'

    .ticket-color should have height of 1 rem

    .ticket-id should have background color of 'yellow' and height as 2rem


# Solution - 
    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Ticket</title>
        <style>
            /* Write CSS here */
            .main-cont {
                display: flex;
                gap: 2rem;
                padding: 2rem;
                justify-content: center;
            }
            .ticket-cont {
                height: 12rem;
                width: 15rem;
                background: coral;
            }
            .ticket-color {
                height: 1rem;
            }
            .ticket-id {
                background: yellow;
                height: 2rem;
            }
        </style>
    </head>

    <body>
        <div class="main-cont">
            <div class="ticket-cont">
                <div class="ticket-color"></div>
                <div class="ticket-id">id 1</div>
                <div class="task-area"> this is task 1</div>
            </div>
        </div>
    </body>

    </html>

Ques-2 -> (Kanban Q2: Making Input Modal (HTML/CSS))

    Raw Problem
    Your task is to write CSS for the modal to create a new ticket.

    You have been given HTML and CSS boilerplate code and you have to apply the below CSS rules:

    .modal-cont should have:
    1. display of flex
    2. background color of 'lightblue'
    3. height of 300px and width of 500px

    .priority-colors-container should have:
    1. display of flex
    2. flex direction of column
    3. align items is set to 'center'
    4. justify content is set to 'space-around'

# Solution - 
    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Ticket</title>
        <link rel="stylesheet" href="boilerplate.css">
        <style>
            /* Write CSS here ======== */
            .modal-cont {
                display: flex;
                background: lightblue;
                height: 300px;
                width: 500px;
            }
            .priority-colors-container {
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: space-around;
            }
        </style>
    </head>

    <body>
        <!-- Modal -->
        <div class="modal-cont">

            <textarea class="textArea-cont" placeholder="Enter Your Task" spellcheck="false">

            </textarea>


            <div class="priority-colors-container">
                <div class="lightpink priority-color"></div>
                <div class="lightgreen priority-color"></div>
                <div class="lightblue priority-color"></div>
                <div class="black priority-color active"></div>
            </div>

        </div>
    </body>

    </html>

Ques-3 -> (Kanban Q4: Viewing Input Modal)

    Raw Problem
    You need to write JS program that:

    When add button (div.add-btn) is clicked, it
    makes the input modal (div.modal-cont) visible.

    Visible means -> display is set to flex
    Not Visible means -> display is set to none

    Write the code in script.js file, and utilise the flag boolean to manage states for when the modal is visible and not visible.

# Solution - 

    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Ticket Management App</title>

        <link rel="stylesheet" href="style.css">

    </head>

    <body>
        <div class="toolbox-cont">
            <div class="toolbox-priority-cont">
                <div class="lightpink color"></div>
                <div class="lightgreen color"></div>
                <div class="lightblue color"></div>
                <div class="black color"></div>
            </div>

            <div class="action-btn-cont">
                <div class="add-btn">
                    <img src="plus-logo.png" alt="color-logo" height="50%">
                </div>
                <div class="remove-btn">
                    <img src="cross-logo.png" alt="color-logo" height="50%">
                </div>
            </div>
        </div>


        <div class="main-cont">
            <!-- <div class="ticket-cont">
                <div class="ticket-color"></div>
                <div class="ticket-id">id 1</div>
                <div class="task-area"> this  is task 1</div>
                <div class="ticket-lock">
                <i class="fa-solid fa-lock"></i>
            </div> -->
        </div>
        </div>



        <!-- Modal -->
        <div class="modal-cont">

            <textarea class="textArea-cont" placeholder="Enter Your Task" spellcheck="false">

        </textarea>


            <div class="priority-colors-container">
                <div class="lightpink priority-color"></div>
                <div class="lightgreen priority-color"></div>
                <div class="lightblue priority-color"></div>
                <div class="black priority-color active"></div>
            </div>

        </div>

        <script>
            let addBtn = document.querySelector(".add-btn");
            let modalCont = document.querySelector(".modal-cont");
            let addFlag = false;

            // Write code here.
            addBtn.addEventListener('click', function() {
                if(addFlag === false) modalCont.style.display = 'flex';
                else modalCont.style.display = 'none';
            })
        </script>
    </body>

    </html>

Ques-4 -> (Kanban Q3: Designing Toolbar (HTML/CSS))

    Raw Problem
    Your task is to write CSS for the toolbar.

    You have been given HTML boilerplate code and you have to apply the below CSS rules:

    .toolbox-cont should have:
    1. Background color set to '#4b4b4b'
    2. display set as flex
    3. align-items set as center

    .toolbox-priority-cont should have:
    1. Background color set to '#3d3d3d'
    2. display set as flex
    3. align-items set as center
    4. justify-content set as space-evenly

    .action-btn-cont should have:
    1. Background color set to '#3d3d3d'
    2. display set as flex

    .action-btn-cont>* should have:
    1. display set as flex
    2. align-items set as center
    3. justify-content set as center
    4. color set as 'white'

# Solution - 

    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Ticket</title>
        <link rel="stylesheet" href="boilerplate.css">
        <style>
            /* Write CSS here */
            .toolbox-cont {
                background: #4b4b4b;
                display: flex;
                align-items: center;
            }
            .toolbox-priority-cont {
                background: #3d3d3d;
                display: flex;
                align-items: center;
                justify-content: space-evenly;
            }
            .action-btn-cont {
                background: #3d3d3d;
                display: flex;
            }
            .action-btn-cont>*  {
                display: flex;
                align-items: center;
                justify-content: center;
                color: #fff;
            }
        </style>
    </head>

    <body>
        <div class="toolbox-cont">
            <div class="toolbox-priority-cont">
                <div class="lightpink color"></div>
                <div class="lightgreen color"></div>
                <div class="lightblue color"></div>
                <div class="black color"></div>
            </div>

            <div class="action-btn-cont">
                <div class="add-btn">
                    <img src="plus-logo.png" alt="color-logo" height="50%">
                </div>
                <div class="remove-btn">
                    <img src="cross-logo.png" alt="color-logo" height="50%">
                </div>
            </div>
        </div>
    </body>

    </html>

Ques-5 -> (Kanban Q5: Automate Ticket Creation from Input)

    Raw Problem
    Write JS program that can create a new ticket based in the input being provided.

    You have been given boilerplate HTML and CSS code that you need to study and utilise.

    .textArea-cont in the input modal would take in the content of the ticket.
    Whenever, user inputs the content and presses 'shift' key it should:

    1. Create a new ticket (div.ticket-cont) with the below html sturcture:
    ```
    <div class="ticket-color ${ticketColor}"></div>
    <div class="ticket-id">#${id}</div>
    <div class="task-area">${ticketTask}</div>
    <div class="ticket-lock">
    <i class="fa-solid fa-lock"></i>
    </div>
    ```
    2. Where out of the variables in the above boilerplate:
    2.1. ticketColor can be of any color.
    2.2. id should be from ticketID var, it should start from 0 and increment for each ticket.
    2.3. ticketTask should be the text input by user in the .textArea-cont
    3. You need to add this new ticket to the div.main-cont

    The boilerplate JS code contains a createTicket() function that you need to complete in order to make the feature work.

    Write the code in script.js file.

# Solution - 

    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Ticket Management App</title>

        <link rel="stylesheet" href="style.css">

    </head>

    <body>
        <div class="toolbox-cont">
            <div class="toolbox-priority-cont">
                <div class="lightpink color"></div>
                <div class="lightgreen color"></div>
                <div class="lightblue color"></div>
                <div class="black color"></div>
            </div>

            <div class="action-btn-cont">
                <div class="add-btn">
                    <img src="plus-logo.png" alt="color-logo" height="50%">
                </div>
                <div class="remove-btn">
                    <img src="cross-logo.png" alt="color-logo" height="50%">
                </div>
            </div>
        </div>


        <div class="main-cont">
            <!-- <div class="ticket-cont">
                <div class="ticket-color"></div>
                <div class="ticket-id">id 1</div>
                <div class="task-area"> this  is task 1</div>
                <div class="ticket-lock">
                <i class="fa-solid fa-lock"></i>
            </div> -->
        </div>
        </div>



        <!-- Modal -->
        <div class="modal-cont">

            <textarea class="textArea-cont" placeholder="Enter Your Task" spellcheck="false">

        </textarea>


            <div class="priority-colors-container">
                <div class="lightpink priority-color"></div>
                <div class="lightgreen priority-color"></div>
                <div class="lightblue priority-color"></div>
                <div class="black priority-color active"></div>
            </div>

        </div>

        <script>
            let modalCont = document.querySelector(".modal-cont");
            let mainCont = document.querySelector(".main-cont");
            let taskArea = document.querySelector(".textArea-cont");

            let colors = ["lightpink", "lightgreen", "lightblue", "black"];
            let allPriorityColors = document.querySelectorAll(".priority-color");

            let modalPriorityColor = colors[colors.length - 1];
            let ticketID = 0;

            // TICKET IS CREATED WHEN SHIFT IS PRESSED
            modalCont.addEventListener("keydown", function (e) {
            let key = e.key;

            if (key == "Shift") {
                createTicket(taskArea.value, modalPriorityColor);
                modalCont.style.display = "none";
                addFlag = false;
                taskArea.value = "";
            }
            });

            // ADDING TICKET TO DOM
            function createTicket(ticketTask, ticketColor) {
            // Write code here ==
            let id = ticketID++;
            let ticketCont = document.createElement('div');
            ticketCont.classList.add('ticket-cont');
            let ticket = `
                    <div class="ticket-color ${ticketColor}"></div>
                    <div class="ticket-id">#${id}</div>
                    <div class="task-area">${ticketTask}</div>
                    <div class="ticket-lock">
                        <i class="fa-solid fa-lock"></i>
                    </div>
            `;
            ticketCont.innerHTML = ticket;
            mainCont.appendChild(ticketCont);
            }

        </script>
        <script defer>
            let addBtn = document.querySelector(".add-btn");
            let addFlag = false;

            addBtn.addEventListener("click", function () {
                addFlag = !addFlag;

                if (addFlag == true) {
                    modalCont.style.display = "flex";
                } else {
                    modalCont.style.display = "none";
                }
            });
        </script>
    </body>

    </html>