Ques-1 -> (DOM Q6: Movie Filter)

    Raw Problem
    Write a script using JavaScript to make the filter work.

    The filter has 4 categories: none, Action, Romance, Comedy
    Each movie card is a div with an h3 and p element.
    The p element has a data-category attribute that holds the information about the category of the movie.
    Use the value of this data-category attribute to filter the movies based on the selected category from the drop-down menu.

    NOTE:
    If the category is selected as 'none', show all the movies.
    To hide a movie card, change the style->display property of the div to 'none'.
    To show a movie card, change the style->display property of the div to 'block'.

# Solution - 
    <!DOCTYPE html>
    <html>
    <!-- Please NOTE that the link to assets (like images) need to be set in global context.
    For example:
    To access an image from assets folder correct way to set src attribute is 

    src = 'profile.png'

    instead of 

    src = './assets/profile.png'
    -->

    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>
        <style>
            * {
                box-sizing: border-box;
            }

            body {
                display: flex;
                flex-wrap: wrap;
                justify-content: space-around;
                padding-top: 5rem;
            }

            .movies {
                height: 10rem;
                width: 10rem;
                margin: 2rem;
            }

            .price {
                background-color: rgb(247 84 33);
                height: 8rem;
                padding: 1.5rem;
                font-size: 2rem;
            }

            .heading {
                background-color: rgba(0, 0, 0, 0.856);
                height: 2rem;
            }

            .heading,
            .price {
                color: white;
                text-align: center;
                margin: 0;
            }

            select,
            h1 {
                position: fixed;
            }

            h1 {
                top: 0px;
            }

            select {
                width: 8rem;
            }
        </style>
    </head>

    <body>
        <h1>BOOK MY SHOW</h1>
        <select>
            <option value="none">None</option>
            <option value="action">Action</option>
            <option value="romance">Romance</option>
            <option value="comedy">Comedy</option>
        </select>

        <div class="movies">
            <h3 class="heading">Example-1 action</h3>
            <p class="price" data-category="action">Rs. 100</p>
        </div>
        <div class="movies">
            <h3 class="heading">Example-2 action</h3>
            <p class="price" data-category="action">Rs 200</p>
        </div>
        <div class="movies">
            <h3 class="heading">Example-3 action</h3>
            <p class="price" data-category="action">Rs. 150</p>
        </div>
        <div class="movies">
            <h3 class="heading">Example-4 romance</h3>
            <p class="price" data-category="romance">Rs 200</p>
        </div>
        <div class="movies">
            <h3 class="heading">Example-5 romance</h3>
            <p class="price" data-category="romance">Rs. 150</p>
        </div>
        <div class="movies">
            <h3 class="heading">Example-6 romance</h3>
            <p class="price" data-category="romance">Rs. 150</p>
        </div>
        <div class="movies">
            <h3 class="heading">Example-7 action</h3>
            <p class="price" data-category="action">Rs 200</p>
        </div>
        <div class="movies">
            <h3 class="heading">Example-8 comedy</h3>
            <p class="price" data-category="comedy">Rs. 100</p>
        </div>
        <div class="movies">
            <h3 class="heading">Example-9 romance</h3>
            <p class="price" data-category="romance">Rs. 100</p>
        </div>
        <div class="movies">
            <h3 class="heading">Example-10 comedy</h3>
            <p class="price" data-category="comedy">Rs 200</p>
        </div>

    </body>
    <script>
        // Write your JS program here ====
        const selectEL = document.querySelector('select');
        const priceEl = document.querySelectorAll('.price');
        selectEL.addEventListener('change', (ev) => {
            for(let i=0;i<priceEl.length;i++) {
                let dataEl = priceEl[i].getAttribute('data-category');
                if(ev.target.value === 'none') {
                    priceEl.parentElement.style.display = 'block';
                }
                if(ev.target.value === dataEl) {
                    priceEl[i].parentElement.style.display = 'block';
                } else {
                    priceEl[i].parentElement.style.display = 'none';
                }
            }
        })

    </script>
    </html>

Ques-2 -> (DOM Q9: Fix the alert)

    Raw Problem
    The given JS code is broken. This is because:

    Even when yellow box is clicked, it is alerted that red is clicked.



    Fix the code such that:

    1. It alerts as 'yellow is clicked' when yellow box is clicked.

    2. and alerts as 'red is clicked' when the red box is clicked.

    3. A single alert is generated when any of the box is clicked.

# Solution - 
    <!DOCTYPE html>
    <html>
    <!-- Please NOTE that the link to assets (like images) need to be set in global context.
    For example:
    To access an image from assets folder correct way to set src attribute is 

    src = 'profile.png'

    instead of 

    src = './assets/profile.png'
    -->

    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>
        <style>
            div {
                border: 1px solid;
            }

            .red {
                padding: 2rem;
                height: 20rem;
                width: 20rem;
                background-color: red;
            }

            .yellow {
                height: 10rem;
                width: 10rem;
                margin: auto;
                background-color: yellow;
                margin-top: 5rem;
            }
        </style>
    </head>

    <body>
        <div class="red">
            <div class="yellow"></div>
        </div>

        <script>
            //Q The following code is broken. Even when clicked on yellow,
            //its alerted that red is clicked. Fix it

            let red = document.querySelector(".red");
            let yellow = document.querySelector(".yellow");
            red.addEventListener('click', (e) => {
                window.alert('red is clicked');
            })
            yellow.addEventListener('click', (e) => {
                e.stopPropagation();
                window.alert('yellow is clicked');
            })
        </script>
    </body>

    </html>

Ques-3 -> (DOM Q10: Delete Buttons)

    Raw Problem
    In the HTML provided, there is a list with every item containing an individual delete button and a remove all button on top of the list.

    Write a JavaScript program that performs the following tasks:

    Task 1:
    Make all the individual delete buttons work.
    Set the list item's (li element) display style property as 'none'.

    Task 2:
    Make the Remove All button work.
    Set the entire list's (ul element) display style property as 'none'.

# Solution - 

    <!DOCTYPE html>
    <html>
    <!-- Please NOTE that the link to assets (like images) need to be set in global context.
    For example:
    To access an image from assets folder correct way to set src attribute is 

    src = 'profile.png'

    instead of 

    src = './assets/profile.png'
    -->

    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>
    </head>

    <body>
        <button id="all">Remove All</button>
        <ul>
            <li>
                <p>Task - 1</p>
                <button>delete</button>
            </li>
            <li>
                <p>Task - 2</p>
                <button>delete</button>
            </li>
            <li>
                <p>Task - 3</p>
                <button>delete</button>
            </li>
            <li>
                <p>Task - 4</p>
                <button>delete</button>
            </li>
        </ul>
        <script>
            // Write your JS program here =========
            let listEle = document.querySelectorAll('li button');
            listEle.forEach(function(element) {
                element.addEventListener('click', function(ev) {
                    ev.target.parentElement.style.display = 'none';
                })
            })
            const allEle = document.querySelector('#all');
            const ulEle = document.querySelector('ul');
            allEle.addEventListener('click', function(ev) {
                ulEle.style.display = "none"
            })
        </script>
    </body>

    </html>

Ques-4 -> (DOM Q20: Recording Form Input)

    Raw Problem
    Write a script which takes the entry from the form and adds it into the table

    The HTML has majorly 2 components:
    table, form

    Here,

    1. table:
    1.1. contains the entire table
    1.2. has thead and tbody as immediate children
    1.2. has a total 3 tr, 1 in thead and 2 in tbody
    1.3. each tr in tbody

    2. form:
    2.1. contains three input tags of type:
    2.1.1. text for name,
    2.1.2. number for marks,
    2.1.3. submit for button.


    Your task is to:
    1. Add a new <tr> element inside <tbody> whenever the form is filled and the submit button is clicked.
    2. The new <tr> element should have 3 <td> elements for SNO., Name and Marks.
    3. Name and Marks are to be retrieved from user input in the form and the SNO. is to be increased by 1 at every new addition.

# Solution - 

    <!DOCTYPE html>
    <html lang="en">

    <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
    </head>

    <body>
    <h1>DATABASE</h1>
    <table>
        <thead>
        <tr>
            <th>S. No.</th>
            <th>Name</th>
            <th>Marks</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>1</td>
            <td>Sameer</td>
            <td>90</td>
        </tr>
        <tr>
            <td>2</td>
            <td>Rohan</td>
            <td>100</td>
        </tr>
        </tbody>
    </table>

    <form onsubmit="handleSubmit()">
        <label for="name">Name:
        <input type="text" id="name" />
        </label>
        <label for="marks">Marks:
        <input type="number" id="marks" />
        </label>
        <input type="submit" value="Submit" />
    </form>
    <script>
        // Q Write a script which takes the entry from the form and add it into the table
        const handleSubmit = (ev) => {
        ev.preventDefault();
        const name = document.querySelector('#name').value;
        const marks = document.querySelector('#marks').value;
        const tbody = document.querySelector('tbody');
        //   const rowCount = tbody.rows.length + 1;
        const rowCount = 3;

        let trEle = document.createElement('tr');
        let td1Ele = document.createElement('td');
        td1Ele.innerText = rowCount;
        trEle.appendChild(td1Ele);

        let td2Ele = document.createElement('td');
        td2Ele.innerText = name;
        trEle.appendChild(td2Ele);

        let td3Ele = document.createElement('td');
        td3Ele.innerText = marks;
        trEle.appendChild(td3Ele);

        tbody.appendChild(trEle);
        rowCount += 1;
        } 
        
        const formEle = document.querySelector('form');
        formEle.addEventListener('submit', handleSubmit);
    </script>
    </body>

    </html>

Ques-5 -> (DOM Q21: Deleting Item from List)

    Raw Problem
    Write a single click event handler that helps to delete any list item when clicked on it, attach that handler to above list

    The HTML has majorly 3 components in following hierarchy:
    ul > li > a

    Here,

    1. ul#listToDestroy:
    1.1. contains the entire list
    1.2. has 5 li tags with unique id.

    2. li:
    2.1. contains an anchor tag <a> in it.

    3. a:
    3.1. contains unique innerText in it.


    Your task is to:
    1. Whenevr clicked the specific list item, <li> element, from the list ul#listToDestroy.
    2. The new list should have list items 1 less than the previous state.
    3. Unique ID and innerText should remain intact for each list item.

# Solution - 

    <!DOCTYPE html>
    <html lang="en">

    <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    </head>

    <body>
    <ul id="listToDestroy">
        <li id = "Item-1"><a href="#">first item</a></li>
        <li id = "Item-2"><a href="#">second item</a></li>
        <li id = "Item-3"><a href="#">third item</a></li>
        <li id = "Item-4"><a href="#">forth item</a></li>
        <li id = "Item-5"><a href="#">Fifth item</a></li>
    </ul>
    
    <script>
        // Q Write a single click event handler that helps to delete any list item when clicked on it, attach that handler to above list
        let liEle = document.querySelectorAll('li')
        liEle.forEach(element => {
        element.addEventListener('click', function(ev) {
            ev.target.parentElement.remove();
        })
        })

        
    </script>
    </body>

    </html>